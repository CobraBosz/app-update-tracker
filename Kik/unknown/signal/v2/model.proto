syntax = "proto3";

package common.signal.v2;

option go_package = "github.com/kikinteractive/xiphias-model-common/generated/go/signal/v2;signal";
option java_package = "com.kik.gen.signal.v2";
option objc_class_prefix = "KPBCommonSignalV2";

import "protobuf_validation.proto";
import "common/v2/model.proto";

// A signal notifies a client that an action should be performed. It's primary
// intention is to be a mechanism in which services can 'signal' a user client
// to perform some kind of action in a reliable way. It is _not_ a mechanism
// to send data, or synchronize data in and of itself. It _can_, however, be
// used as a mechanism to indicate that synchronization should be performed.
//
// See the related services in xiphias-api-internal and xiphias-api-mobile for
// usage details.
message Signal {
    // Id is _only_ generated by the internal signal service. It is opaque to
    // the rest of the world (both internal and external).
    // This should always be set for persistent signals and should never be set for
    // transient signals.
    Id id = 1 [(kik.validation.field_validation) = {
        mandatory: false
    }];

    // Id is a byte-wise lexicographically sortable Id used for synchronizing
    // the signal stream between clients and server.
    message Id {
        bytes raw_value = 1 [(kik.validation.field_validation) = {
            mandatory: true
            min_byte_length: 16
            max_byte_length: 32
        }];
    }

    oneof kind {
        GlobalSignal global_signal = 2;
        PersonaSignal persona_signal = 3;
        ChatSignal chat_signal = 4;
        ContactListSignal contact_list_signal = 5;
        IsTypingSignal is_typing_signal = 6;
    }
}

// GlobalSignal indicates that everything should be scheduled for a
// refresh.
//
// It is reserved more more extreme edge cases, such as when an account
// may be inactive for an extended period of time, and their log is
// getting significantly full. The sending of a GlobalSignal is therefore
// restricted to a whitelisted set of signaler's, enforced by the Signaler
// service.
message GlobalSignal {
}

message PersonaSignal {
    // If persona_id is set, then only the specified persona should be updated.
    // If persona_id is not set, then all personas should be updated.
    common.v2.PersonaId persona_id = 1 [(kik.validation.field_validation) = {
        mandatory: false
    }];
}

message ChatSignal {
    // if chat_id is set, then only the indicated chat should be updated.
    // If chat_id is not set, then all chats should be updated.
    common.v2.ChatId chat_id = 1 [(kik.validation.field_validation) = {
        mandatory: false
    }];
}

message ContactListSignal {
    common.v2.PersonaId contact_id = 1 [(kik.validation.field_validation) = {
        mandatory: false
    }];
}

message IsTypingSignal {
    repeated IsTypingNotification notifications = 1 [(kik.validation.field_validation) = {
        mandatory: true
        min_repetitions: 1
        max_repetitions: 1024
    }];

    // IsTypingNotification is a notification indicating if a chat participant is typing.
    // A participant currently typing is modelled by periodic IsTypingNotification's with
    // is_typing=true.
    // A participant which has stopped typing is modelled by either the periodic is_typing=true
    // notifications stopping (and some client defined timeout has elapsed) _or_ an
    // IsTypingNotification with is_typing=false.
    message IsTypingNotification {
        common.v2.ChatId chat_id = 1 [(kik.validation.field_validation) = {
            mandatory: true
        }];

        common.v2.PersonaId participant = 2 [(kik.validation.field_validation) = {
            mandatory: true
        }];

        bool is_typing = 3;
    }
}
