syntax = "proto3";

package mobile.chats.v2;

option go_package = "github.com/kikinteractive/xiphias-api-mobile/generated/go/chats/v2;chats";
option java_package = "com.kik.gen.chats.v2";
option objc_class_prefix = "KPBMobileChatsV2";

import "protobuf_validation.proto";
import "google/protobuf/timestamp.proto";

import "common/v2/model.proto";

service ChatSettings {
    // Mute a specified chat.  Optionally also specify a period after which the mute status expires.
    // A chat which is muted will not trigger client push notifications.
    rpc MuteChat(MuteChatRequest) returns (MuteChatResponse) {}

    // Explicitly un-mute a specified chat.
    rpc UnmuteChat(UnmuteChatRequest) returns (UnmuteChatResponse) {}
}


message MuteChatRequest {
    // Chat which is to be muted
    // If the caller is not a member of this chat, a gRPC-level INVALID_ARGUMENT will be generated.
    common.v2.ChatId id = 1 [(kik.validation.field_validation) = {
        mandatory: true
    }];

    // Optional time in the future after which the chat will automatically un-mute.
    // Note that specifying a time in the past will result in a gRPC-level INVALID_ARGUMENT error
    google.protobuf.Timestamp mute_expiry = 2 [(kik.validation.field_validation) = {
        mandatory: false
    }];
}

message MuteChatResponse {
    Result result = 1;
    enum Result {
        // The request was successfully processed.
        OK = 0;
    }
}

message UnmuteChatRequest {
    common.v2.ChatId id = 1 [(kik.validation.field_validation) = {
        mandatory: true
    }];
}

message UnmuteChatResponse {
    Result result = 1;
    enum Result {
        // The request was successfully processed.
        OK = 0;
    }
}
